af_abs(af_array *out, const af_array in)
af_accum(af_array *out, const af_array in, const int dim)
af_acos(af_array *out, const af_array in)
af_acosh(af_array *out, const af_array in)
af_add(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_all_true(af_array *out, const af_array in, const int dim)
af_all_true_all(double *real, double *imag, const af_array in)
af_all_true_by_key(af_array *keys_out, af_array *vals_out,const af_array keys, const af_array vals,const int dim)
af_alloc_device(void **ptr, const dim_t bytes)
af_alloc_device_v2(void **ptr, const dim_t bytes)
af_alloc_host(void **ptr, const dim_t bytes)
af_alloc_pinned(void **ptr, const dim_t bytes)
af_and(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_anisotropic_diffusion(af_array* out, const af_array in,const float timestep,const float conductance,const unsigned iterations,const af_flux_function fftype,const af_diffusion_eq diffusion_kind)
af_any_true(af_array *out, const af_array in, const int dim)
af_any_true_all(double *real, double *imag, const af_array in)
af_any_true_by_key(af_array *keys_out, af_array *vals_out,const af_array keys, const af_array vals,const int dim)
af_approx1(af_array *out, const af_array in, const af_array pos,const af_interp_type method, const float off_grid)
af_approx1_uniform(af_array *out, const af_array in,const af_array pos, const int interp_dim,const double idx_start, const double idx_step,const af_interp_type method,const float off_grid)
af_approx1_uniform_v2(af_array *out, const af_array in,const af_array pos, const int interp_dim,const double idx_start,const double idx_step,const af_interp_type method,const float off_grid)
af_approx1_v2(af_array *out, const af_array in, const af_array pos,const af_interp_type method, const float off_grid)
af_approx2(af_array *out, const af_array in,const af_array pos0, const af_array pos1,const af_interp_type method, const float off_grid)
af_approx2_uniform(af_array *out, const af_array in,const af_array pos0, const int interp_dim0,const double idx_start_dim0,const double idx_step_dim0,const af_array pos1, const int interp_dim1,const double idx_start_dim1,const double idx_step_dim1,const af_interp_type method,const float off_grid)
af_approx2_uniform_v2(af_array *out, const af_array in,const af_array pos0, const int interp_dim0,const double idx_start_dim0,const double idx_step_dim0,const af_array pos1, const int interp_dim1,const double idx_start_dim1,const double idx_step_dim1,const af_interp_type method,const float off_grid)
af_approx2_v2(af_array *out, const af_array in,const af_array pos0, const af_array pos1,const af_interp_type method, const float off_grid)
af_arg(af_array *out, const af_array in)
af_array_to_string(char **output, const char *exp, const af_array arr,const int precision, const bool transpose)
af_asin(af_array *out, const af_array in)
af_asinh(af_array *out, const af_array in)
af_assign_gen( af_array *out,const af_array lhs,const dim_t ndims, const af_index_t* indices,const af_array rhs)
af_assign_seq( af_array *out,const af_array lhs,const unsigned ndims, const af_seq* const indices,const af_array rhs)
af_atan(af_array *out, const af_array in)
af_atan2(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_atanh(af_array *out, const af_array in)
af_bilateral(af_array *out, const af_array in, const float spatial_sigma, const float chromatic_sigma, const bool isColor)
af_bitand(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_bitnot(af_array *out, const af_array in)
af_bitor(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_bitshiftl(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_bitshiftr(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_bitxor(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_block_event(const af_event eventHandle)
af_canny(af_array* out, const af_array in,const af_canny_threshold threshold_type,const float low_threshold_ratio,const float high_threshold_ratio,const unsigned sobel_window, const bool is_fast)
af_cast(af_array *out, const af_array in, const af_dtype type)
af_cbrt(af_array *out, const af_array in)
af_ceil(af_array *out, const af_array in)
af_cholesky(af_array *out, int *info, const af_array in, const bool is_upper)
af_cholesky_inplace(int *info, af_array in, const bool is_upper)
af_clamp(af_array *out, const af_array in,const af_array lo, const af_array hi, const bool batch)
af_color_space(af_array *out, const af_array image, const af_cspace_t to, const af_cspace_t from)
af_confidence_cc(af_array *out, const af_array in,const af_array seedx, const af_array seedy,const unsigned radius,const unsigned multiplier, const int iter,const double segmented_value)
af_conjg(af_array *out, const af_array in)
af_constant(af_array *arr, const double val, const unsigned ndims, const dim_t * const dims, const af_dtype type)
af_constant_complex(af_array *arr, const double real, const double imag,const unsigned ndims, const dim_t * const dims, const af_dtype type)
af_constant_long(af_array *arr, const long long val, const unsigned ndims, const dim_t * const dims)
af_constant_ulong(af_array *arr, const unsigned long long val, const unsigned ndims, const dim_t * const dims)
af_convolve1(af_array *out, const af_array signal, const af_array filter, const af_conv_mode mode, af_conv_domain domain)
af_convolve2(af_array *out, const af_array signal, const af_array filter, const af_conv_mode mode, af_conv_domain domain)
af_convolve2_gradient_nn(af_array *out,const af_array incoming_gradient,const af_array original_signal,const af_array original_filter,const af_array convolved_output,const unsigned stride_dims, const dim_t *strides,const unsigned padding_dims, const dim_t *paddings,const unsigned dilation_dims, const dim_t *dilations,af_conv_gradient_type grad_type)
af_convolve2_nn(af_array *out, const af_array signal, const af_array filter,const unsigned stride_dims, const dim_t *strides,const unsigned padding_dims, const dim_t *paddings,const unsigned dilation_dims, const dim_t *dilations)
af_convolve2_sep(af_array *out, const af_array col_filter, const af_array row_filter, const af_array signal, const af_conv_mode mode)
af_convolve3(af_array *out, const af_array signal, const af_array filter, const af_conv_mode mode, af_conv_domain domain)
af_copy_array(af_array *arr, const af_array in)
af_corrcoef(double *realVal, double *imagVal, const af_array X, const af_array Y)
af_cos(af_array *out, const af_array in)
af_cosh(af_array *out, const af_array in)
af_count(af_array *out, const af_array in, const int dim)
af_count_all(double *real, double *imag, const af_array in)
af_count_by_key(af_array *keys_out, af_array *vals_out,const af_array keys, const af_array vals,const int dim)
af_cov(af_array* out, const af_array X, const af_array Y, const bool isbiased)
af_cov_v2(af_array *out, const af_array X, const af_array Y,const af_var_bias bias)
af_cplx(af_array *out, const af_array in)
af_cplx2(af_array *out, const af_array real, const af_array imaginary, const bool batch)
af_create_array(af_array *arr, const void * const data, const unsigned ndims, const dim_t * const dims, const af_dtype type)
af_create_event(af_event* eventHandle)
af_create_features(af_features *feat, dim_t num)
af_create_handle(af_array *arr, const unsigned ndims, const dim_t * const dims, const af_dtype type)
af_create_indexers(af_index_t** indexers)
af_create_memory_manager(af_memory_manager* out)
af_create_random_engine(af_random_engine *engine,af_random_engine_type rtype,unsigned long long seed)
af_create_sparse_array(af_array *out,const dim_t nRows, const dim_t nCols,const af_array values, const af_array rowIdx, const af_array colIdx,const af_storage stype)
af_create_sparse_array_from_dense(af_array *out, const af_array dense,const af_storage stype)
af_create_sparse_array_from_ptr(af_array *out,const dim_t nRows, const dim_t nCols, const dim_t nNZ,const void * const values,const int * const rowIdx, const int * const colIdx,const af_dtype type, const af_storage stype,const af_source src)
af_create_strided_array(af_array *arr,const void *data,const dim_t offset,const unsigned ndims,const dim_t *const dims,const dim_t *const strides,const af_dtype ty,const af_source location)
af_create_window(af_window *out, const int width, const int height, const char* const title)
af_delete_event(af_event eventHandle)
af_delete_image_memory(void* ptr)
af_destroy_window(const af_window wind)
af_det(double *det_real, double *det_imag, const af_array in)
af_device_array(af_array *arr, void *data, const unsigned ndims, const dim_t * const dims, const af_dtype type)
af_device_gc()
af_device_info(char* d_name, char* d_platform, char *d_toolkit, char* d_compute)
af_device_mem_info(size_t *alloc_bytes, size_t *alloc_buffers,size_t *lock_bytes, size_t *lock_buffers)
af_diag_create(af_array *out, const af_array in, const int num)
af_diag_extract(af_array *out, const af_array in, const int num)
af_diff1(af_array *out, const af_array in, const int dim)
af_diff2(af_array *out, const af_array in, const int dim)
af_dilate(af_array *out, const af_array in, const af_array mask)
af_dilate3(af_array *out, const af_array in, const af_array mask)
af_div(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_dog(af_array *out, const af_array in, const int radius1, const int radius2)
af_dot(af_array *out,const af_array lhs, const af_array rhs,const af_mat_prop optLhs, const af_mat_prop optRhs)
af_dot_all(double *real, double *imag,const af_array lhs, const af_array rhs,const af_mat_prop optLhs, const af_mat_prop optRhs)
af_draw_hist(const af_window wind, const af_array X, const double minval, const double maxval, const af_cell* const props)
af_draw_image(const af_window wind, const af_array in, const af_cell* const props)
af_draw_plot(const af_window wind, const af_array X, const af_array Y, const af_cell* const props)
af_draw_plot3(const af_window wind, const af_array P, const af_cell* const props)
af_draw_plot_2d(const af_window wind, const af_array X, const af_array Y,const af_cell* const props)
af_draw_plot_3d(const af_window wind,const af_array X, const af_array Y, const af_array Z,const af_cell* const props)
af_draw_plot_nd(const af_window wind, const af_array P, const af_cell* const props)
af_draw_scatter(const af_window wind, const af_array X, const af_array Y,const af_marker_type marker, const af_cell* const props)
af_draw_scatter3(const af_window wind, const af_array P,const af_marker_type marker, const af_cell* const props)
af_draw_scatter_2d(const af_window wind, const af_array X, const af_array Y,const af_marker_type marker, const af_cell* const props)
af_draw_scatter_3d(const af_window wind,const af_array X, const af_array Y, const af_array Z,const af_marker_type marker, const af_cell* const props)
af_draw_scatter_nd(const af_window wind, const af_array P,const af_marker_type marker, const af_cell* const props)
af_draw_surface(const af_window wind, const af_array xVals, const af_array yVals, const af_array S, const af_cell* const props)
af_draw_vector_field_2d(const af_window wind,const af_array xPoints, const af_array yPoints,const af_array xDirs, const af_array yDirs,const af_cell* const props)
af_draw_vector_field_3d(const af_window wind,const af_array xPoints, const af_array yPoints, const af_array zPoints,const af_array xDirs, const af_array yDirs, const af_array zDirs,const af_cell* const props)
af_draw_vector_field_nd(const af_window wind,const af_array points, const af_array directions,const af_cell* const props)
af_enqueue_wait_event(const af_event eventHandle)
af_eq(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_erf(af_array *out, const af_array in)
af_erfc(af_array *out, const af_array in)
af_erode(af_array *out, const af_array in, const af_array mask)
af_erode3(af_array *out, const af_array in, const af_array mask)
af_eval(af_array in)
af_eval_multiple(const int num, af_array *arrays)
af_example_function(af_array* out,const af_array in,const af_someenum_t param)
af_exp(af_array *out, const af_array in)
af_expm1(af_array *out, const af_array in)
af_factorial(af_array *out, const af_array in)
af_fast(af_features *out, const af_array in, const float thr, const unsigned arc_length,const bool non_max, const float feature_ratio, const unsigned edge)
af_fft(af_array *out, const af_array in, const double norm_factor, const dim_t odim0)
af_fft2(af_array *out, const af_array in, const double norm_factor, const dim_t odim0, const dim_t odim1)
af_fft2_c2r(af_array *out, const af_array in, const double norm_factor, const bool is_odd)
af_fft2_inplace(af_array in, const double norm_factor)
af_fft2_r2c(af_array *out, const af_array in, const double norm_factor, const dim_t pad0, const dim_t pad1)
af_fft3(af_array *out, const af_array in, const double norm_factor, const dim_t odim0, const dim_t odim1, const dim_t odim2)
af_fft3_c2r(af_array *out, const af_array in, const double norm_factor, const bool is_odd)
af_fft3_inplace(af_array in, const double norm_factor)
af_fft3_r2c(af_array *out, const af_array in, const double norm_factor, const dim_t pad0, const dim_t pad1, const dim_t pad2)
af_fft_c2r(af_array *out, const af_array in, const double norm_factor, const bool is_odd)
af_fft_convolve1(af_array *out, const af_array signal, const af_array filter, const af_conv_mode mode)
af_fft_convolve2(af_array *out, const af_array signal, const af_array filter, const af_conv_mode mode)
af_fft_convolve3(af_array *out, const af_array signal, const af_array filter, const af_conv_mode mode)
af_fft_inplace(af_array in, const double norm_factor)
af_fft_r2c(af_array *out, const af_array in, const double norm_factor, const dim_t pad0)
af_fir(af_array *y, const af_array b, const af_array x)
af_flat(af_array *out, const af_array in)
af_flip(af_array *out, const af_array in, const unsigned dim)
af_floor(af_array *out, const af_array in)
af_free_device(void *ptr)
af_free_device_v2(void *ptr)
af_free_host(void *ptr)
af_free_pinned(void *ptr)
af_gaussian_kernel(af_array *out,const int rows, const int cols,const double sigma_r, const double sigma_c)
af_ge(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_gemm(af_array *C, const af_mat_prop opA, const af_mat_prop opB,const void *alpha, const af_array A, const af_array B,const void *beta)
af_get_active_backend(af_backend *backend)
af_get_allocated_bytes(size_t *bytes, const af_array arr)
af_get_available_backends(int* backends)
af_get_backend_count(unsigned* num_backends)
af_get_backend_id(af_backend *backend, const af_array in)
af_get_data_ptr(void *data, const af_array arr)
af_get_data_ref_count(int *use_count, const af_array in)
af_get_dbl_support(bool* available, const int device)
af_get_default_random_engine(af_random_engine *engine)
af_get_device(int *device)
af_get_device_count(int *num_of_devices)
af_get_device_id(int *device, const af_array in)
af_get_device_ptr(void **ptr, const af_array arr)
af_get_dims(dim_t *d0, dim_t *d1, dim_t *d2, dim_t *d3,const af_array arr)
af_get_elements(dim_t *elems, const af_array arr)
af_get_features_num(dim_t *num, const af_features feat)
af_get_features_orientation(af_array *orientation, const af_features feat)
af_get_features_score(af_array *score, const af_features feat)
af_get_features_size(af_array *size, const af_features feat)
af_get_features_xpos(af_array *out, const af_features feat)
af_get_features_ypos(af_array *out, const af_features feat)
af_get_half_support(bool *available, const int device)
af_get_kernel_cache_directory(size_t *length, char *path)
af_get_manual_eval_flag(bool *flag)
af_get_mem_step_size(size_t *step_bytes)
af_get_numdims(unsigned *result, const af_array arr)
af_get_offset(dim_t *offset, const af_array arr)
af_get_raw_ptr(void **ptr, const af_array arr)
af_get_scalar(void* output_value, const af_array arr)
af_get_seed(unsigned long long *seed)
af_get_size_of(size_t *size, af_dtype type)
af_get_strides(dim_t *s0, dim_t *s1, dim_t *s2, dim_t *s3, const af_array arr)
af_get_type(af_dtype *type, const af_array arr)
af_get_version(int *major, int *minor, int *patch)
af_gloh(af_features *feat, af_array *desc, const af_array in,const unsigned n_layers, const float contrast_thr,const float edge_thr, const float init_sigma, const bool double_input,const float intensity_scale, const float feature_ratio)
af_gradient(af_array *dx, af_array *dy, const af_array in)
af_gray2rgb(af_array* out, const af_array in, const float rFactor, const float gFactor, const float bFactor)
af_grid(const af_window wind, const int rows, const int cols)
af_gt(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_hamming_matcher(af_array* idx, af_array* dist,const af_array query, const af_array train,const dim_t dist_dim, const unsigned n_dist)
af_harris(af_features *out, const af_array in, const unsigned max_corners,const float min_response, const float sigma,const unsigned block_size, const float k_thr)
af_hist_equal(af_array *out, const af_array in, const af_array hist)
af_histogram(af_array *out, const af_array in, const unsigned nbins, const double minval, const double maxval)
af_homography(af_array *H, int *inliers, const af_array x_src, const af_array y_src,const af_array x_dst, const af_array y_dst,const af_homography_type htype, const float inlier_thr,const unsigned iterations, const af_dtype otype)
af_hsv2rgb(af_array* out, const af_array in)
af_hypot(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_identity(af_array *out, const unsigned ndims, const dim_t * const dims, const af_dtype type)
af_ifft(af_array *out, const af_array in, const double norm_factor, const dim_t odim0)
af_ifft2(af_array *out, const af_array in, const double norm_factor, const dim_t odim0, const dim_t odim1)
af_ifft2_inplace(af_array in, const double norm_factor)
af_ifft3(af_array *out, const af_array in, const double norm_factor, const dim_t odim0, const dim_t odim1, const dim_t odim2)
af_ifft3_inplace(af_array in, const double norm_factor)
af_ifft_inplace(af_array in, const double norm_factor)
af_iir(af_array *y, const af_array b, const af_array a, const af_array x)
af_imag(af_array *out, const af_array in)
af_imax(af_array *out, af_array *idx, const af_array in,const int dim)
af_imax_all(double *real, double *imag, unsigned *idx, const af_array in)
af_imin(af_array *out, af_array *idx, const af_array in,const int dim)
af_imin_all(double *real, double *imag, unsigned *idx,const af_array in)
af_index( af_array *out,const af_array in,const unsigned ndims, const af_seq* const index)
af_index_gen( af_array *out,const af_array in,const dim_t ndims, const af_index_t* indices)
af_info()
af_info_string(char** str, const bool verbose)
af_init()
af_inverse(af_array *out, const af_array in, const af_mat_prop options)
af_inverse_deconv(af_array* out, const af_array in,const af_array psf, const float gamma,const af_inverse_deconv_algo algo)
af_iota(af_array *out, const unsigned ndims, const dim_t * const dims,const unsigned t_ndims, const dim_t * const tdims, const af_dtype type)
af_is_bool(bool *result, const af_array arr)
af_is_column(bool *result, const af_array arr)
af_is_complex(bool *result, const af_array arr)
af_is_double(bool *result, const af_array arr)
af_is_empty(bool *result, const af_array arr)
af_is_floating(bool *result, const af_array arr)
af_is_half(bool *result, const af_array arr)
af_is_image_io_available(bool *out)
af_is_integer(bool *result, const af_array arr)
af_is_lapack_available(bool *out)
af_is_linear(bool *result, const af_array arr)
af_is_locked_array(bool *res, const af_array arr)
af_is_owner(bool *result, const af_array arr)
af_is_real(bool *result, const af_array arr)
af_is_realfloating(bool *result, const af_array arr)
af_is_row(bool *result, const af_array arr)
af_is_scalar(bool *result, const af_array arr)
af_is_single(bool *result, const af_array arr)
af_is_sparse(bool *result, const af_array arr)
af_is_vector(bool *result, const af_array arr)
af_is_window_closed(bool *out, const af_window wind)
af_isinf(af_array *out, const af_array in)
af_isnan(af_array *out, const af_array in)
af_iszero(af_array *out, const af_array in)
af_iterative_deconv(af_array* out,const af_array in, const af_array ker,const unsigned iterations,const float relax_factor,const af_iterative_deconv_algo algo)
af_join(af_array *out, const int dim, const af_array first, const af_array second)
af_join_many(af_array *out, const int dim, const unsigned n_arrays, const af_array *inputs)
af_le(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_lgamma(af_array *out, const af_array in)
af_load_image(af_array *out, const char* filename, const bool isColor)
af_load_image_memory(af_array *out, const void* ptr)
af_load_image_native(af_array *out, const char* filename)
af_lock_array(const af_array arr)
af_lock_device_ptr(const af_array arr)
af_log(af_array *out, const af_array in)
af_log10(af_array *out, const af_array in)
af_log1p(af_array *out, const af_array in)
af_log2(af_array *out, const af_array in)
af_lookup( af_array *out,const af_array in, const af_array indices,const unsigned dim)
af_lower(af_array *out, const af_array in, bool is_unit_diag)
af_lt(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_lu(af_array *lower, af_array *upper, af_array *pivot, const af_array in)
af_lu_inplace(af_array *pivot, af_array in, const bool is_lapack_piv)
af_mark_event(const af_event eventHandle)
af_match_template(af_array *out, const af_array search_img,const af_array template_img, const af_match_type m_type)
af_matmul( af_array *out ,const af_array lhs, const af_array rhs,const af_mat_prop optLhs, const af_mat_prop optRhs)
af_max(af_array *out, const af_array in, const int dim)
af_max_all(double *real, double *imag, const af_array in)
af_max_by_key(af_array *keys_out, af_array *vals_out,const af_array keys, const af_array vals,const int dim)
af_max_ragged(af_array *val, af_array *idx, const af_array in, const af_array ragged_len, const int dim)
af_maxfilt(af_array *out, const af_array in, const dim_t wind_length, const dim_t wind_width, const af_border_type edge_pad)
af_maxof(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_mean(af_array *out, const af_array in, const dim_t dim)
af_mean_all(double *real, double *imag, const af_array in)
af_mean_all_weighted(double *real, double *imag, const af_array in, const af_array weights)
af_mean_shift(af_array *out, const af_array in, const float spatial_sigma, const float chromatic_sigma, const unsigned iter, const bool is_color)
af_mean_weighted(af_array *out, const af_array in, const af_array weights, const dim_t dim)
af_meanvar(af_array *mean, af_array *var, const af_array in,const af_array weights, const af_var_bias bias, const dim_t dim)
af_medfilt(af_array *out, const af_array in, const dim_t wind_length, const dim_t wind_width, const af_border_type edge_pad)
af_medfilt1(af_array *out, const af_array in, const dim_t wind_width, const af_border_type edge_pad)
af_medfilt2(af_array *out, const af_array in, const dim_t wind_length, const dim_t wind_width, const af_border_type edge_pad)
af_median(af_array* out, const af_array in, const dim_t dim)
af_median_all(double *realVal, double *imagVal, const af_array in)
af_memory_manager_get_active_device_id(af_memory_manager handle,int* id)
af_memory_manager_get_max_memory_size(af_memory_manager handle,size_t* size, int id)
af_memory_manager_get_memory_pressure_threshold(af_memory_manager handle, float* value)
af_memory_manager_get_payload(af_memory_manager handle,void** payload)
af_memory_manager_native_alloc(af_memory_manager handle,void** ptr, size_t size)
af_memory_manager_native_free(af_memory_manager handle, void* ptr)
af_memory_manager_set_add_memory_management_fn(af_memory_manager handle, af_memory_manager_add_memory_management_fn fn)
af_memory_manager_set_alloc_fn(af_memory_manager handle,af_memory_manager_alloc_fn fn)
af_memory_manager_set_allocated_fn(af_memory_manager handle, af_memory_manager_allocated_fn fn)
af_memory_manager_set_get_memory_pressure_fn(af_memory_manager handle, af_memory_manager_get_memory_pressure_fn fn)
af_memory_manager_set_initialize_fn(af_memory_manager handle, af_memory_manager_initialize_fn fn)
af_memory_manager_set_is_user_locked_fn(af_memory_manager handle, af_memory_manager_is_user_locked_fn fn)
af_memory_manager_set_jit_tree_exceeds_memory_pressure_fn(af_memory_manager handle,af_memory_manager_jit_tree_exceeds_memory_pressure_fn fn)
af_memory_manager_set_memory_pressure_threshold(af_memory_manager handle, float value)
af_memory_manager_set_payload(af_memory_manager handle,void* payload)
af_memory_manager_set_print_info_fn(af_memory_manager handle, af_memory_manager_print_info_fn fn)
af_memory_manager_set_remove_memory_management_fn(af_memory_manager handle, af_memory_manager_remove_memory_management_fn fn)
af_memory_manager_set_shutdown_fn(af_memory_manager handle, af_memory_manager_shutdown_fn fn)
af_memory_manager_set_signal_memory_cleanup_fn(af_memory_manager handle, af_memory_manager_signal_memory_cleanup_fn fn)
af_memory_manager_set_unlock_fn(af_memory_manager handle,af_memory_manager_unlock_fn fn)
af_memory_manager_set_user_lock_fn(af_memory_manager handle, af_memory_manager_user_lock_fn fn)
af_memory_manager_set_user_unlock_fn(af_memory_manager handle, af_memory_manager_user_unlock_fn fn)
af_min(af_array *out, const af_array in, const int dim)
af_min_all(double *real, double *imag, const af_array in)
af_min_by_key(af_array *keys_out, af_array *vals_out,const af_array keys, const af_array vals,const int dim)
af_minfilt(af_array *out, const af_array in, const dim_t wind_length, const dim_t wind_width, const af_border_type edge_pad)
af_minof(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_mod(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_moddims(af_array *out, const af_array in, const unsigned ndims, const dim_t * const dims)
af_moments(af_array *out, const af_array in, const af_moment_type moment)
af_moments_all(double* out, const af_array in, const af_moment_type moment)
af_mul(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_nearest_neighbour(af_array* idx, af_array* dist,const af_array query, const af_array train,const dim_t dist_dim, const unsigned n_dist,const af_match_type dist_type)
af_neq(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_norm(double *out, const af_array in, const af_norm_type type, const double p, const double q)
af_not(af_array *out, const af_array in)
af_or(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_orb(af_features *feat, af_array *desc, const af_array in,const float fast_thr, const unsigned max_feat, const float scl_fctr,const unsigned levels, const bool blur_img)
af_pad(af_array *out, const af_array in,const unsigned begin_ndims,const dim_t *const begin_dims, const unsigned end_ndims,const dim_t *const end_dims,const af_border_type pad_fill_type)
af_pinverse(af_array *out, const af_array in, const double tol,const af_mat_prop options)
af_pow(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_pow2(af_array *out, const af_array in)
af_print_array(af_array arr)
af_print_array_gen(const char *exp, const af_array arr, const int precision)
af_print_mem_info(const char *msg, const int device_id)
af_product(af_array *out, const af_array in, const int dim)
af_product_all(double *real, double *imag, const af_array in)
af_product_by_key(af_array *keys_out, af_array *vals_out,const af_array keys, const af_array vals, const int dim)
af_product_by_key_nan(af_array *keys_out, af_array *vals_out,const af_array keys, const af_array vals,const int dim, const double nanval)
af_product_nan(af_array *out, const af_array in, const int dim, const double nanval)
af_product_nan_all(double *real, double *imag,const af_array in, const double nanval)
af_qr(af_array *q, af_array *r, af_array *tau, const af_array in)
af_qr_inplace(af_array *tau, af_array in)
af_randn(af_array *out, const unsigned ndims,const dim_t * const dims, const af_dtype type)
af_random_engine_get_seed(unsigned long long * const seed,af_random_engine engine)
af_random_engine_get_type(af_random_engine_type *rtype,const af_random_engine engine)
af_random_engine_set_seed(af_random_engine *engine,const unsigned long long seed)
af_random_engine_set_type(af_random_engine *engine,const af_random_engine_type rtype)
af_random_normal(af_array *out, const unsigned ndims,const dim_t * const dims, const af_dtype type,af_random_engine engine)
af_random_uniform(af_array *out, const unsigned ndims,const dim_t * const dims, const af_dtype type,af_random_engine engine)
af_randu(af_array *out, const unsigned ndims,const dim_t * const dims, const af_dtype type)
af_range(af_array *out, const unsigned ndims, const dim_t * const dims,const int seq_dim, const af_dtype type)
af_rank(unsigned *rank, const af_array in, const double tol)
af_read_array_index(af_array *out, const char *filename, const unsigned index)
af_read_array_key(af_array *out, const char *filename, const char* key)
af_read_array_key_check(int *index, const char *filename, const char* key)
af_real(af_array *out, const af_array in)
af_regions(af_array *out, const af_array in, const af_connectivity connectivity, const af_dtype ty)
af_release_array(af_array arr)
af_release_features(af_features feat)
af_release_indexers(af_index_t* indexers)
af_release_memory_manager(af_memory_manager handle)
af_release_random_engine(af_random_engine engine)
af_rem(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_reorder(af_array *out, const af_array in,const unsigned x, const unsigned y, const unsigned z, const unsigned w)
af_replace(af_array a, const af_array cond, const af_array b)
af_replace_scalar(af_array a, const af_array cond, const double b)
af_resize(af_array *out, const af_array in, const dim_t odim0, const dim_t odim1, const af_interp_type method)
af_retain_array(af_array *out, const af_array in)
af_retain_features(af_features *out, const af_features feat)
af_retain_random_engine(af_random_engine *out,const af_random_engine engine)
af_rgb2gray(af_array* out, const af_array in, const float rPercent, const float gPercent, const float bPercent)
af_rgb2hsv(af_array* out, const af_array in)
af_rgb2ycbcr(af_array* out, const af_array in, const af_ycc_std standard)
af_root(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_rotate(af_array *out, const af_array in, const float theta,const bool crop, const af_interp_type method)
af_round(af_array *out, const af_array in)
af_rsqrt(af_array *out, const af_array in)
af_sat(af_array *out, const af_array in)
af_save_array(int *index, const char* key, const af_array arr, const char *filename, const bool append)
af_save_image(const char* filename, const af_array in)
af_save_image_memory(void** ptr, const af_array in, const af_image_format format)
af_save_image_native(const char* filename, const af_array in)
af_scale(af_array *out, const af_array in, const float scale0, const float scale1,const dim_t odim0, const dim_t odim1, const af_interp_type method)
af_scan(af_array *out, const af_array in, const int dim,af_binary_op op, bool inclusive_scan)
af_scan_by_key(af_array *out, const af_array key,const af_array in, const int dim,af_binary_op op, bool inclusive_scan)
af_select(af_array *out, const af_array cond, const af_array a, const af_array b)
af_select_scalar_l(af_array *out, const af_array cond, const double a, const af_array b)
af_select_scalar_r(af_array *out, const af_array cond, const af_array a, const double b)
af_set_array_indexer(af_index_t* indexer, const af_array idx, const dim_t dim)
af_set_axes_label_format(const af_window wind,const char *const xformat,const char *const yformat,const char *const zformat,const af_cell *const props)
af_set_axes_limits_2d(const af_window wind,const float xmin, const float xmax,const float ymin, const float ymax,const bool exact,const af_cell* const props)
af_set_axes_limits_3d(const af_window wind,const float xmin, const float xmax,const float ymin, const float ymax,const float zmin, const float zmax,const bool exact,const af_cell* const props)
af_set_axes_limits_compute(const af_window wind,const af_array x, const af_array y, const af_array z,const bool exact,const af_cell* const props)
af_set_axes_titles(const af_window wind,const char * const xtitle,const char * const ytitle,const char * const ztitle,const af_cell* const props)
af_set_backend(const af_backend bknd)
af_set_default_random_engine_type(const af_random_engine_type rtype)
af_set_device(const int device)
af_set_enable_stacktrace(int is_enabled)
af_set_fft_plan_cache_size(size_t cache_size)
af_set_intersect(af_array *out, const af_array first,const af_array second, const bool is_unique)
af_set_kernel_cache_directory(const char* path,int override_env)
af_set_manual_eval_flag(bool flag)
af_set_mem_step_size(const size_t step_bytes)
af_set_memory_manager(af_memory_manager handle)
af_set_memory_manager_pinned(af_memory_manager handle)
af_set_position(const af_window wind, const unsigned x, const unsigned y)
af_set_seed(const unsigned long long seed)
af_set_seq_indexer(af_index_t* indexer, const af_seq* idx,const dim_t dim, const bool is_batch)
af_set_seq_param_indexer(af_index_t* indexer,const double begin, const double end, const double step,const dim_t dim, const bool is_batch)
af_set_size(const af_window wind, const unsigned w, const unsigned h)
af_set_title(const af_window wind, const char* const title)
af_set_union(af_array *out, const af_array first,const af_array second, const bool is_unique)
af_set_unique(af_array *out, const af_array in, const bool is_sorted)
af_set_visibility(const af_window wind, const bool is_visible)
af_shift(af_array *out, const af_array in, const int x, const int y, const int z, const int w)
af_show(const af_window wind)
af_sift(af_features *feat, af_array *desc, const af_array in,const unsigned n_layers, const float contrast_thr, const float edge_thr,const float init_sigma, const bool double_input,const float intensity_scale, const float feature_ratio)
af_sigmoid(af_array *out, const af_array in)
af_sign(af_array *out, const af_array in)
af_sin(af_array *out, const af_array in)
af_sinh(af_array *out, const af_array in)
af_skew(af_array *out, const af_array in, const float skew0, const float skew1,const dim_t odim0, const dim_t odim1, const af_interp_type method,const bool inverse)
af_sobel_operator(af_array *dx, af_array *dy, const af_array img, const unsigned ker_size)
af_solve(af_array *x, const af_array a, const af_array b,const af_mat_prop options)
af_solve_lu(af_array *x, const af_array a, const af_array piv,const af_array b, const af_mat_prop options)
af_sort(af_array *out, const af_array in, const unsigned dim,const bool isAscending)
af_sort_by_key(af_array *out_keys, af_array *out_values,const af_array keys, const af_array values,const unsigned dim, const bool isAscending)
af_sort_index(af_array *out, af_array *indices, const af_array in,const unsigned dim, const bool isAscending)
af_sparse_convert_to(af_array *out, const af_array in,const af_storage destStorage)
af_sparse_get_col_idx(af_array *out, const af_array in)
af_sparse_get_info(af_array *values, af_array *rowIdx, af_array *colIdx, af_storage *stype,const af_array in)
af_sparse_get_nnz(dim_t *out, const af_array in)
af_sparse_get_row_idx(af_array *out, const af_array in)
af_sparse_get_storage(af_storage *out, const af_array in)
af_sparse_get_values(af_array *out, const af_array in)
af_sparse_to_dense(af_array *out, const af_array sparse)
af_sqrt(af_array *out, const af_array in)
af_stdev(af_array *out, const af_array in, const dim_t dim)
af_stdev_all(double *real, double *imag, const af_array in)
af_stdev_all_v2(double *real, double *imag, const af_array in,const af_var_bias bias)
af_stdev_v2(af_array *out, const af_array in,const af_var_bias bias, const dim_t dim)
af_sub(af_array *out, const af_array lhs, const af_array rhs, const bool batch)
af_sum(af_array *out, const af_array in, const int dim)
af_sum_all(double *real, double *imag, const af_array in)
af_sum_by_key(af_array *keys_out, af_array *vals_out,const af_array keys, const af_array vals, const int dim)
af_sum_by_key_nan(af_array *keys_out, af_array *vals_out,const af_array keys, const af_array vals,const int dim, const double nanval)
af_sum_nan(af_array *out, const af_array in,const int dim, const double nanval)
af_sum_nan_all(double *real, double *imag,const af_array in, const double nanval)
af_susan(af_features* out, const af_array in, const unsigned radius,const float diff_thr, const float geom_thr,const float feature_ratio, const unsigned edge)
af_svd(af_array *u, af_array *s, af_array *vt, const af_array in)
af_svd_inplace(af_array *u, af_array *s, af_array *vt, af_array in)
af_sync(const int device)
af_tan(af_array *out, const af_array in)
af_tanh(af_array *out, const af_array in)
af_tgamma(af_array *out, const af_array in)
af_tile(af_array *out, const af_array in,const unsigned x, const unsigned y, const unsigned z, const unsigned w)
af_topk(af_array *values, af_array *indices, const af_array in,const int k, const int dim, const af_topk_function order)
af_transform(af_array *out, const af_array in, const af_array transform,const dim_t odim0, const dim_t odim1,const af_interp_type method, const bool inverse)
af_transform_coordinates(af_array *out, const af_array tf, const float d0, const float d1)
af_transform_v2(af_array *out, const af_array in, const af_array transform,const dim_t odim0, const dim_t odim1,const af_interp_type method, const bool inverse)
af_translate(af_array *out, const af_array in, const float trans0, const float trans1,const dim_t odim0, const dim_t odim1, const af_interp_type method)
af_transpose(af_array *out, af_array in, const bool conjugate)
af_transpose_inplace(af_array in, const bool conjugate)
af_trunc(af_array *out, const af_array in)
af_unlock_array(const af_array arr)
af_unlock_device_ptr(const af_array arr)
af_unset_memory_manager()
af_unset_memory_manager_pinned()
af_unwrap(af_array *out, const af_array in, const dim_t wx, const dim_t wy,const dim_t sx, const dim_t sy, const dim_t px, const dim_t py,const bool is_column)
af_upper(af_array *out, const af_array in, bool is_unit_diag)
af_var(af_array *out, const af_array in, const bool isbiased, const dim_t dim)
af_var_all(double *realVal, double *imagVal, const af_array in, const bool isbiased)
af_var_all_v2(double *realVal, double *imagVal, const af_array in,const af_var_bias bias)
af_var_all_weighted(double *realVal, double *imagVal, const af_array in, const af_array weights)
af_var_v2(af_array *out, const af_array in, const af_var_bias bias,const dim_t dim)
af_var_weighted(af_array *out, const af_array in, const af_array weights, const dim_t dim)
af_where(af_array *idx, const af_array in)
af_wrap(af_array *out,const af_array in,const dim_t ox, const dim_t oy,const dim_t wx, const dim_t wy,const dim_t sx, const dim_t sy,const dim_t px, const dim_t py,const bool is_column)
af_wrap_v2(af_array *out,const af_array in,const dim_t ox, const dim_t oy,const dim_t wx, const dim_t wy,const dim_t sx, const dim_t sy,const dim_t px, const dim_t py,const bool is_column)
af_write_array(af_array arr, const void *data, const size_t bytes, af_source src)
af_ycbcr2rgb(af_array* out, const af_array in, const af_ycc_std standard)
